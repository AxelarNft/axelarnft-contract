{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8b7F4aBFc16577e32A6830d7bB36F9D2904802FB",
    "txHash": "0xa1050decd62b254e5c223685ceb644eb43b9ae6bf4c8a4bb7df38f67b2fae89e"
  },
  "proxies": [
    {
      "address": "0x3a035cB1B7DE8237Ca49652B417A4bbab7765439",
      "txHash": "0xe5e8bdddf656be4174236dd756f01ad35559df13a79d0ed38a0a0b3c41785b1b",
      "kind": "transparent"
    },
    {
      "address": "0x0ff14Df035F74cf1A92f6E47ed4457b98AC79CAF",
      "txHash": "0xd739c6390474f8c14382b908e6f1eb01177d9aa0080430dbcf5714501512fa5c",
      "kind": "transparent"
    },
    {
      "address": "0x00762f7415577Ab004Ae9b926856bEee049EBAe7",
      "txHash": "0xd099b12d620f018a21edc17495d782bbed35b92c745f9a52eae27cf821365903",
      "kind": "transparent"
    },
    {
      "address": "0xA1292c7299e74Ebc9B9D75F668933D979cb08BA1",
      "txHash": "0x88c5d419f3472d7180f25ea9544d26945385b32e29261b32337371e2d688bdad",
      "kind": "transparent"
    }
  ],
  "impls": {
    "72b7ea56365caa0ee769433cf0c287fd069205ad43536c9a1aedb54858756f7b": {
      "address": "0x6EefA7a54043bBc05BfE736Bcc749a1af17B289C",
      "txHash": "0xf2b0fb3e096b6b545f720f2926b7f8f1b30dd9729eb9ca11d1721621b7fb71ad",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "domainSeperator",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Base",
            "src": "contracts/meta-transactions/EIP712Base.sol:22"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MetaTransactionVerifier",
            "src": "contracts/meta-transactions/MetaTransactionVerifier.sol:19"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:21"
          },
          {
            "label": "templates",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:22"
          },
          {
            "label": "minterTemplates",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:23"
          },
          {
            "label": "axelarSeaContract",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:24"
          },
          {
            "label": "projectOwner",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:26"
          },
          {
            "label": "nftProject",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:27"
          },
          {
            "label": "projectMember",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:30"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "160",
            "type": "t_address",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:33"
          },
          {
            "label": "baseMintFee",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:34"
          },
          {
            "label": "baseContractURI",
            "offset": 0,
            "slot": "162",
            "type": "t_string_storage",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:36"
          },
          {
            "label": "baseTokenURI",
            "offset": 0,
            "slot": "163",
            "type": "t_string_storage",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:37"
          },
          {
            "label": "__GAP",
            "offset": 0,
            "slot": "164",
            "type": "t_array(t_uint256)200_storage",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)200_storage": {
            "label": "uint256[200]",
            "numberOfBytes": "6400"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ba49b4f33bc10ec7eda758d567c3199c6af1e37a005d19b2146eb9d8faea93d6": {
      "address": "0x79b0be2aab12D4c7a120666Cd614fD792F8dBBA1",
      "txHash": "0xa148073d946ef3e651e556f86a1ba3db5897a598f2735da9b8c6ec200f0d7442",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "domainSeperator",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Base",
            "src": "contracts/meta-transactions/EIP712Base.sol:22"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MetaTransactionVerifier",
            "src": "contracts/meta-transactions/MetaTransactionVerifier.sol:19"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:21"
          },
          {
            "label": "templates",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:22"
          },
          {
            "label": "minterTemplates",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:23"
          },
          {
            "label": "axelarSeaContract",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:24"
          },
          {
            "label": "projectOwner",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:26"
          },
          {
            "label": "nftProject",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:27"
          },
          {
            "label": "projectMember",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:30"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "160",
            "type": "t_address",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:33"
          },
          {
            "label": "baseMintFee",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:34"
          },
          {
            "label": "baseContractURI",
            "offset": 0,
            "slot": "162",
            "type": "t_string_storage",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:36"
          },
          {
            "label": "baseTokenURI",
            "offset": 0,
            "slot": "163",
            "type": "t_string_storage",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:37"
          },
          {
            "label": "__GAP",
            "offset": 0,
            "slot": "164",
            "type": "t_array(t_uint256)200_storage",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)200_storage": {
            "label": "uint256[200]",
            "numberOfBytes": "6400"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0ef37cc04621f2609beed77395869cd0607d8baa131961ab2e92dc03c6a9ddef": {
      "address": "0xC9fe23637393a6EA437b2846F362e2aadF939eaB",
      "txHash": "0x9e987fc3c22cc5b774de61e9a2948d116bcaecc0a408cb1b1f7ac759ff161276",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "domainSeperator",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Base",
            "src": "contracts/meta-transactions/EIP712Base.sol:22"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MetaTransactionVerifier",
            "src": "contracts/meta-transactions/MetaTransactionVerifier.sol:19"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:21"
          },
          {
            "label": "templates",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:22"
          },
          {
            "label": "minterTemplates",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:23"
          },
          {
            "label": "axelarSeaContract",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:24"
          },
          {
            "label": "projectOwner",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:26"
          },
          {
            "label": "nftProject",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:27"
          },
          {
            "label": "projectMember",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:30"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "160",
            "type": "t_address",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:33"
          },
          {
            "label": "baseMintFee",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:34"
          },
          {
            "label": "baseContractURI",
            "offset": 0,
            "slot": "162",
            "type": "t_string_storage",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:36"
          },
          {
            "label": "baseTokenURI",
            "offset": 0,
            "slot": "163",
            "type": "t_string_storage",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:37"
          },
          {
            "label": "newProjectFeeAddress",
            "offset": 0,
            "slot": "164",
            "type": "t_address",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:40"
          },
          {
            "label": "newProjectFeeAmount",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:41"
          },
          {
            "label": "newCollectionFeeAddress",
            "offset": 0,
            "slot": "166",
            "type": "t_address",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:43"
          },
          {
            "label": "newCollectionFeeAmount",
            "offset": 0,
            "slot": "167",
            "type": "t_uint256",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:44"
          },
          {
            "label": "__GAP",
            "offset": 0,
            "slot": "168",
            "type": "t_array(t_uint256)200_storage",
            "contract": "AxelarSeaProjectRegistry",
            "src": "contracts/mint/AxelarSeaProjectRegistry.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)200_storage": {
            "label": "uint256[200]",
            "numberOfBytes": "6400"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
